use zerocopy::{FromBytes, IntoBytes};

use crate::memory::{ByteBool, PadBool, StdString, Vftable};

#[derive(FromBytes, IntoBytes, Debug, Clone)]
#[repr(C)]
pub struct ConfigGunActionInfo {
    pub vftable: Vftable,
    pub action_id: StdString,
    pub action_name: StdString,
    pub action_description: StdString,
    pub action_sprite_filename: StdString,
    pub action_unidentified_sprite_filename: StdString,
    pub action_type: i32,
    pub action_spawn_level: StdString,
    pub action_spawn_probability: StdString,
    pub action_spawn_requires_flag: StdString,
    pub action_spawn_manual_unlock: PadBool<3>,
    pub action_max_uses: i32,
    pub custom_xml_file: StdString,
    pub action_mana_drain: f32,
    pub action_is_dangerous_blast: PadBool<3>,
    pub action_draw_many_count: i32,
    pub action_ai_never_uses: ByteBool,
    pub action_never_unlimited: ByteBool,
    pub state_shuffled: PadBool<1>,
    pub state_cards_drawn: i32,
    pub state_discarded_action: ByteBool,
    pub state_destroyed_action: PadBool<2>,
    pub fire_rate_wait: i32,
    pub speed_multiplier: f32,
    pub child_speed_multiplier: f32,
    pub dampening: f32,
    pub explosion_radius: f32,
    pub spread_degrees: f32,
    pub pattern_degrees: f32,
    pub screenshake: f32,
    pub recoil: f32,
    pub damage_melee_add: f32,
    pub damage_projectile_add: f32,
    pub damage_electricity_add: f32,
    pub damage_fire_add: f32,
    pub damage_explosion_add: f32,
    pub damage_ice_add: f32,
    pub damage_slice_add: f32,
    pub damage_healing_add: f32,
    pub damage_curse_add: f32,
    pub damage_drill_add: f32,
    pub damage_null_all: f32,
    pub damage_critical_chance: i32,
    pub damage_critical_multiplier: f32,
    pub explosion_damage_to_materials: f32,
    pub knockback_force: f32,
    pub reload_time: i32,
    pub lightning_count: i32,
    pub material: StdString,
    pub material_amount: i32,
    pub trail_material: StdString,
    pub trail_material_amount: i32,
    pub bounces: i32,
    pub gravity: f32,
    pub light: f32,
    pub blood_count_multiplier: f32,
    pub gore_particles: i32,
    pub ragdoll_fx: i32,
    pub friendly_fire: PadBool<3>,
    pub physics_impulse_coeff: f32,
    pub lifetime_add: i32,
    pub sprite: StdString,
    pub extra_entities: StdString,
    pub game_effect_entities: StdString,
    pub sound_loop_tag: StdString,
    pub projectile_file: StdString,
}
const _: () = assert!(std::mem::size_of::<ConfigGunActionInfo>() == 0x23c);
